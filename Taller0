package Taller0;

import java.io.IOException;
import java.util.*;

public class Taller0 {

	public static int[][][][] sala;
	public static String[][] usuario;
	public static String[][] status;
	public static int totalusuario;
	public static int[] saldo;
	public static String[][] pelicula;
	public static int[] recaudacion;
	public static int totalmovies;
	public static boolean[][][] horario;
	
	
	public static void main(String [] args) throws IOException {
		sala = new int[3][2][10][30];
		usuario = new String[999][5];
		totalusuario=0;
		saldo = new int[999];
		pelicula = new String[99][2];
		recaudacion = new int[99];
		totalmovies=0;
		horario = new boolean[99][3][2];
		
		boolean valido = leer();
		if (valido){
			boolean continuar = true;
			while(continuar) {
				continuar = inicio();
			}
			guardar();
		}
		System.out.println("SALIENDO DEL PROGRAMA, GRACIAS POR PREFERIRNOS");
	}
	
	public static boolean leer() {
		for(int a =0;a<3;a++) {
			for(int b =0;a<3;a++) {
				for(int c =0;a<3;a++) {
					for(int d =0;a<3;a++) {
						if(c<4 && (d<5 || d>24)) {
							sala[a][b][c][d]=-2;
						}
						else {
							sala[a][b][c][d]=-1;
						}
					}
				}
			}
		}
		for(int a =0;a<3;a++) {
			for(int b =0;a<3;a++) {
				for(int c =0;a<3;a++) {
					horario[a][b][c]=false;
				}
			}
		}
		boolean valido = leerCliente();
		if (valido) {
			valido=leerStatus();
			if(valido) {
				valido=leerPeliculas();
			}
		}
		return valido;
	}
	
	public static boolean leerCliente() {
		try {
			File archivo = new File ("clientes.txt"); 
			FileReader text = new FileReader (archivo); 
			BufferedReader reader = new BufferedReader(text); 
			String linea;
			String[] partes;
			int contador=0;
			while((linea = reader.readLine())!=null && contador <999){
				partes = linea.split(",");
				usuario[contador][0]=partes[0];
				usuario[contador][1]=partes[1];
				usuario[contador][2]=partes[2];
				usuario[contador][3]=partes[3];
				saldo[contador]=Integer.parseInt(partes[4]);
				contador++;
			 }
			 reader.close();
			 totalusuario= contador;
			 return true;
		}
		catch (Exception e) {
			System.out.println("ARCHIVO DE CLIENTES CORRUPTO/INEXISTENTE");
			return false;
		}
	}
	
	public static boolean leerStatus() {
		try {
			File archivo = new File ("clientes.txt"); 
			FileReader text = new FileReader (archivo); 
			BufferedReader reader = new BufferedReader(text); 
			String linea;
			String[] partes;
			while((linea = reader.readLine())!=null){
				partes = linea.split(",");
				int direccion = getUsuario(partes[0]);
				if (direccion>=0) {
					usuario[direccion][4]=partes[1];
				}
			 }
			 reader.close();
			 return true;
		}
		catch (Exception e) {
			System.out.println("ARCHIVO DE STATUS CORRUPTO/INEXISTENTE");
			return false;
		}
	}
	
	public static boolean leerPeliculas() {
		try {
			File archivo = new File ("peliculas.txt"); 
			FileReader text = new FileReader (archivo); 
			BufferedReader reader = new BufferedReader(text); 
			String linea;
			String[] partes;
			int contador=0;
			while((linea = reader.readLine())!=null && contador <99){
				partes = linea.split(",");
				pelicula[contador][0]=partes[0];
				pelicula[contador][1]=partes[1];
				recaudacion[contador]=Integer.parseInt(partes[2]);
				int tamano = partes.length;
				for(int i=3;i<tamano;i+=2) {
					int coordenadas =0;
					if(partes[i+1].equals("T") || partes[i+1].equals("t")) {
						coordenadas=1;
					}
					horario[contador][Integer.parseInt(partes[i])][coordenadas]=true;
				}
				
				
				int direccion = getUsuario(partes[0]);
				if (direccion>=0) {
					usuario[direccion][4]=partes[1];
				}
				contador++;
			 }
			totalmovies=contador;
			 reader.close();
			 return true;
		}
		catch (Exception e) {
			System.out.println("ARCHIVO DE STATUS CORRUPTO/INEXISTENTE");
			return false;
		}
	}
	
	public static boolean inicio() {
		@SuppressWarnings("resource")
		var sc= new Scanner(System.in);
		System.out.println("INICIO DE SECION");
		System.out.println("Escriba su Rut");
		System.out.println("Se finaliza con 0:");
		String seleccion = sc.nextLine();
		int direccion = getUsuario(decodificarRut(seleccion));
		if((seleccion).equals("0"))
		{
			System.out.println("Se a finalizado la operacion");
			return false;
		}
		else if (seleccion.equals("ADMIN"))
		{
			System.out.println("Escriba su contraseña");
			String password = sc.nextLine();
			if((password).equals("ADMIN"))
			{
				ADMIN();
			}
			else
			{
				System.out.println("ERROR-Contraseña invalida");
			}
		}
		else if(direccion>=0)
		{
			
			System.out.println("Escriba su contraseña");
			String password = sc.nextLine();
			if((usuario[direccion][4].equals(password))
			{
				cliente(direccion);
			}
			else
			{
				System.out.println("ERROR-Contraseña invalida");
			}
		}
		else
		{
			System.out.println("Usuario no existe");
			System.out.println("Desea crar un nuevo Usuario");
			System.out.println("Y/N");
			String clave =sc.nextLine();
			if((clave).equals("y")||(clave).equals("Y"))
			{
				crearUsuario(seleccion);
			}
			else if((clave).equals("n")||(clave).equals("N"))
			{
				/// NO SE HACE NADA
			}
			else
			{
				System.out.println("ERROR COMANDO NO RECONOCIDO");
			}
			System.out.println("Volviendo al principio de la operacion");
		}
	return true;
	}
	
	public static void crearUsuario(String rut) {
		try {
			@SuppressWarnings("resource")
			var sc= new Scanner(System.in);
			System.out.println("Crear nuevo usuario RUT:"+rut);
			System.out.print("-)NOMBRE:");
			String name = sc.nextLine();
			System.out.println();
			System.out.print("-)Apellido:");
			String lName = sc.nextLine();
			System.out.println();
			System.out.print("-)Clave:");
			String password = sc.nextLine();
			System.out.println();
			System.out.print("-)Saldo:");
			int fondos = sc.nextInt();
			System.out.println();
			usuario[totalusuario][0]=name;
			usuario[totalusuario][1]=lName;
			usuario[totalusuario][2]=rut;
			usuario[totalusuario][3]=password;
			saldo[totalusuario]=fondos;
			totalusuario++;
			System.out.println("El usuario "+name+" "+lName+" fue creado con exito");
		}
		catch (Exception e) {
			System.out.println("ARCHIVO DE NUEVO USUARIO INVALIDO");
		}
	}
	
	public static String decodificarRut(String rut) {
		String[] partes;
		partes = rut.split("");
		if(partes.length==12)
		{
			if(partes[11].equals("k"))
			{
				partes[11]="K";
			}
			return partes[0]+partes[1]+partes[3]+partes[4]+partes[5]+partes[7]+partes[8]+partes[9]+partes[11];
			
		}
		if(partes.length==11)
		{
			if(partes[10].equals("k"))
			{
				partes[10]="K";
			}
			return partes[0] + partes[2]+partes[3]+partes[4] + partes[6]+partes[7]+partes[8] +partes[10];
		}
		else if(partes.length==10)
		{
			if(partes[9].equals("k"))
			{
				partes[9]="K";
			}
			return partes[0]+partes[1]+partes[2]+partes[3]+partes[4]+partes[5]+partes[6]+partes[7]+partes[9];
		}
		else if(partes.length==9)
		{
			if(partes[8].equals("k"))
			{
				partes[8]="K";
			}
			return partes[0]+partes[1]+partes[2]+partes[3]+partes[4]+partes[5]+partes[6]+partes[7]+partes[8];
		}
		else if(partes.length==8)
		{
			if(partes[7].equals("k"))
			{
				partes[7]="K";
			}
			return partes[0]+partes[1]+partes[2]+partes[3]+partes[4]+partes[5]+partes[6]+partes[7];
		}
		else
		{
			return rut;
		}
	}
	
	public static int getUsuario(String rut) {
		int direccion =-1;
		String rutA = decodificarRut(rut);
		for (int i =0; i<totalusuario;i++) {
			String rutB = decodificarRut(usuario[i][2]);
			if(rutA.equals(rutB)) {
				direccion=i;
				break;
			}
		}
		return direccion;
	}
	
	public static void cliente() {
	}
	
	public static void compra() {
	}
	
	public static void devolucion() {
	}
	
	public static void cartelera() {
	}
	
	public static void user(int direccion) {
		try {
			@SuppressWarnings("resource")
			var sc= new Scanner(System.in);
			System.out.println("Nombre :"+usuario[direccion][0]);
			System.out.println("Apellido :"+usuario[direccion][1]);
			System.out.println("Rut :"+usuario[direccion][2]);
			System.out.println("Saldo :"+saldo[direccion]);
			//public static int[][][][] sala  = new int[3][2][10][30];
			//horario = new boolean[99][3][2];
			//pelicula = new String[99][2];
			int contador=1;
			for (int a =0;a<3;a++) {
				for (int b =0;b<2;b++) {
					for (int c =0;c<10;c++) {
						for (int d =0;d<30;d++) {
							if(sala[a][b][c][d]==direccion) {
								String Horario ="Mañana";
								if(b==1) {
									Horario="Tarde";
								}
								int movie=-1;
								for(int y=0;y<totalmovies;y++) {
									if(horario[y][a][b]==true) {
										movie=y;
										break;
									}
								}
								String alfabeto="ABCDEFGHIJ";
								String[] partes = alfabeto.split("");
								System.out.println(contador+")"+pelicula[movie]+" - Sala:"+(a+1)+" - Horario de la "+Horario+" - En el Asiento "+partes[c]+d);
							}
						}
					}
				}
			}
		}
		catch (Exception e) {
			System.out.println("ERROR USUARIO NO VALIDO PARA LECTURA");
		}
	}
	
	public static void ADMIN() {
	}
	
	public static void taquilla() {
	}
	
	public static void info() {
		@SuppressWarnings("resource")
		var sc= new Scanner(System.in);
		System.out.print("RUT:");
		String rut = sc.nextLine();
		System.out.println();
		int direccion = getUsuario(rut);
		if (direccion >=0) {
			user(direccion);
		}
		else {
			System.out.println("ERROR EL RUT DEL USUARIO NO APARECE EN LA BASE DE DATOS");
		}
	}
	
	public static void guardarCliente() {
		try {
			File archivo = new File ("clientes.txt"); 
			FileWriter text = new FileWriter (archivo); 
			BufferedWriter wr = new BufferedWriter(text);
			int contador=0;
			while(contador<totalusuario) {
				wr.write(usuario[contador][0]+","+usuario[contador][1]+","+usuario[contador][2]+","+saldo[contador]+"\n");
				contador++;
			}
			wr.close();
		}
		catch (Exception e) {
			System.out.println("ARCHIVO NO GUARDADO");
		}
	}
	
	public static void guardarStatus() {
		try {
			File archivo = new File ("status.txt"); 
			FileWriter text = new FileWriter (archivo); 
			BufferedWriter wr = new BufferedWriter(text);
			int contador=0;
			while(contador<totalusuario) {
				wr.write(usuario[contador][0]+","+usuario[contador][4]+"\n");
				contador++;
			}
			wr.close();
		}
		catch (Exception e) {
			System.out.println("ARCHIVO NO GUARDADO");
		}
	}
	
	public static void guardarPeliculas() {
		try {
			File archivo = new File ("status.txt"); 
			FileWriter text = new FileWriter (archivo); 
			BufferedWriter wr = new BufferedWriter(text);
			int contador=0;
			while(contador<totalmovies) {
				wr.write(pelicula[contador][0]+","+pelicula[contador][1]+","+recaudacion[contador]+"\n");
				for(int a=0;a<3;a++) {
					for(int b=0;b<2;b++) {
						if(horario[contador][a][b]) {
							String Horario ="M";
							if(b==1) {
								Horario="T";
							}
							wr.write(","+a+","+Horario);
						}
					}
				}
				wr.write("\n");
				contador++;
			}
			wr.close();
		}
		catch (Exception e) {
			System.out.println("ARCHIVO NO GUARDADO");
		}
	}

}
